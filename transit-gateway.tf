########################################################
# Transit Gateway
########################################################
resource "aws_ec2_transit_gateway" "security-tgw" {
  description                     = "Transit Gateway with 3 VPCs generated by Terraform Security"
  default_route_table_association = "enable"
  default_route_table_propagation = "enable"
  amazon_side_asn                 = var.tgw_amazon_side_asn
  transit_gateway_cidr_blocks     = var.transit_gateway_cidr_blocks

  tags = merge(local.common_tags, { Name = "${var.tgw_name}-${var.aws_region}" })
}

# Route Table - Protected VPCs
resource "aws_ec2_transit_gateway_route_table" "tgwy-rt-protected-vpc" {
  depends_on         = [aws_ec2_transit_gateway.security-tgw]
  transit_gateway_id = aws_ec2_transit_gateway.security-tgw.id
  tags               = merge(local.common_tags, { Name = "${var.tgw_name}-rt-for-protected-VPCs" })
}

# tgw VPC attachments -.....................................................................

resource "aws_ec2_transit_gateway_vpc_attachment" "tgw-att-security-vpc" {

  depends_on             = [aws_ec2_transit_gateway.security-tgw]
  appliance_mode_support = "enable"
  transit_gateway_id     = aws_ec2_transit_gateway.security-tgw.id
  vpc_id                 = aws_vpc.security-vpc.id
  subnet_ids             = toset([for subnets in aws_subnet.security-vpc-tgw_attach-subnets : subnets.id])

  transit_gateway_default_route_table_association = false
  transit_gateway_default_route_table_propagation = false

  tags = merge(local.common_tags, { Name = "${var.tgw_name}-attach-security-vpc" })

}

# TGW VPC attachment Protected 1
resource "aws_ec2_transit_gateway_vpc_attachment" "tgw-att-protected-vpc-1" {

  depends_on             = [aws_ec2_transit_gateway.security-tgw]
  appliance_mode_support = "enable"
  transit_gateway_id     = aws_ec2_transit_gateway.security-tgw.id
  vpc_id                 = aws_vpc.protected-vpcs[0].id
  subnet_ids             = toset([for subnets in aws_subnet.protected-vpc-1-tgw_attach-subnets : subnets.id])

  transit_gateway_default_route_table_association = false
  transit_gateway_default_route_table_propagation = false

  tags = merge(local.common_tags, { Name = "${var.tgw_name}-attach-protected-vpc-1" })

}

# TGW VPC attachment Protected 2
resource "aws_ec2_transit_gateway_vpc_attachment" "tgw-att-protected-vpc-2" {

  depends_on             = [aws_ec2_transit_gateway.security-tgw]
  appliance_mode_support = "enable"
  transit_gateway_id     = aws_ec2_transit_gateway.security-tgw.id
  vpc_id                 = aws_vpc.protected-vpcs[1].id
  subnet_ids             = toset([for subnets in aws_subnet.protected-vpc-2-tgw_attach-subnets : subnets.id])

  transit_gateway_default_route_table_association = false
  transit_gateway_default_route_table_propagation = false

  tags = merge(local.common_tags, { Name = "${var.tgw_name}-attach-protected-vpc-2" })

}

# Transit Gateway connect attachment
resource "aws_ec2_transit_gateway_connect" "tgw-attach-connect-security" {

  depends_on                                      = [aws_ec2_transit_gateway_vpc_attachment.tgw-att-security-vpc]
  transport_attachment_id                         = aws_ec2_transit_gateway_vpc_attachment.tgw-att-security-vpc.id
  transit_gateway_id                              = aws_ec2_transit_gateway.security-tgw.id
  transit_gateway_default_route_table_propagation = false

  tags = merge(local.common_tags, { Name = "${var.tgw_name}-attach-connect-to-security" })
}

# transit gateway connect peer to Primary
resource "aws_ec2_transit_gateway_connect_peer" "firewall-1" {
  peer_address                  = local.tgw_connect_peer_1_GRE_address
  bgp_asn                       = var.tgw_connect_peer_1_asn
  transit_gateway_address       = local.tgw_connect_GRE_address_for_peer_1
  inside_cidr_blocks            = var.tgw_connect_peer_1_BGP_Inside_CIDR_blocks
  transit_gateway_attachment_id = aws_ec2_transit_gateway_connect.tgw-attach-connect-security.id
}

# transit gateway connect peer to secondary
resource "aws_ec2_transit_gateway_connect_peer" "firewall-2" {
  peer_address                  = local.tgw_connect_peer_2_GRE_address
  bgp_asn                       = var.tgw_connect_peer_2_asn
  transit_gateway_address       = local.tgw_connect_GRE_address_for_peer_2
  inside_cidr_blocks            = var.tgw_connect_peer_2_BGP_Inside_CIDR_blocks
  transit_gateway_attachment_id = aws_ec2_transit_gateway_connect.tgw-attach-connect-security.id
}
# Route Table Association - Protected VPCs
resource "aws_ec2_transit_gateway_route_table_association" "tgw-rt-assoc-protected-vpc-1" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-protected-vpc-1.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc.id
}
resource "aws_ec2_transit_gateway_route_table_association" "tgw-rt-assoc-protected-vpc-2" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-protected-vpc-2.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc.id
}
# Route Tables Associations - Connect
resource "aws_ec2_transit_gateway_route_table_association" "tgw-rt-assoc-connect-security" {
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-security-vpc.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway.security-tgw.association_default_route_table_id
}

# Route Table Propagations - Protected VPCs
resource "aws_ec2_transit_gateway_route_table_propagation" "tgw-rt-prop-protected-vpc-1" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-protected-vpc-1.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway.security-tgw.association_default_route_table_id
}
resource "aws_ec2_transit_gateway_route_table_propagation" "tgw-rt-prop-protected-vpc-2" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-protected-vpc-2.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway.security-tgw.association_default_route_table_id
}
# Route Table Propagations - Connect
resource "aws_ec2_transit_gateway_route_table_propagation" "tgw-rt-prop-connect-security" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_connect.tgw-attach-connect-security.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc.id
}
# Route Table Propagations - tgw-att-security-vpc
resource "aws_ec2_transit_gateway_route_table_propagation" "tgw-rt-prop-security-vpc" {
  depends_on = [
    aws_ec2_transit_gateway.security-tgw,
    aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc
  ]
  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.tgw-att-security-vpc.id
  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.tgwy-rt-protected-vpc.id
}